{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/calc.ts","webpack:///./src/main.ts","webpack:///./src/utils.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","import { Utils as U } from \"./utils\";\r\n\r\nexport interface CalcArg {\r\n    csv: string,\r\n    targetCellNum: number,\r\n    noData: NoDataTreat\r\n}\r\n\r\nexport interface WorkArg {\r\n    buf: Float32Array;\r\n    targetCellNum: number;\r\n    noData: NoDataTreat;\r\n}\r\n\r\n/** 配列の対象インデックス、開始終了 */\r\ninterface Indices {\r\n    startI: number;\r\n    endI: number;\r\n}\r\n\r\n/** データがない場合の扱い */\r\nexport enum NoDataTreat {\r\n    /** ないものとして計算する */\r\n    ignore,\r\n    /** ゼロとして計算する */\r\n    zero\r\n}\r\n\r\n/** 計算結果 */\r\nexport interface CalcResult {\r\n    val: number;\r\n    lineNum: number;\r\n    noDataNum: number;\r\n    invalidDataNum: number;\r\n}\r\n\r\nexport class CsvCalc {\r\n    /** 入力元CSV */\r\n    csv: string;\r\n    /** データなしの場合の扱い規定 */\r\n    noData: NoDataTreat;\r\n    static LINE_SEPARATOR = \"\\n\";\r\n    static LINE_SEPARATOR_CODE: number = \"\\n\".charCodeAt(0);\r\n    /** 同時実行ワーカ数 */\r\n    static WORK_NUM: number = 8; // TODO とりあえず８。\r\n    constructor(csv: string, noData: NoDataTreat) {\r\n        this.csv = csv;\r\n        this.noData = noData;\r\n    }\r\n\r\n    /** \r\n     * 平均値を含む結果を返す。  \r\n     */\r\n    async getAve(cellNum: number): Promise<CalcResult> {\r\n        const promiz = this.separateAndAssignWork(cellNum);\r\n        const vals = await Promise.all(promiz);\r\n        return U.margeAve(vals, this.noData);\r\n    }\r\n\r\n    /** csvをざっと切ってワーカに渡す、を繰り返す。 */\r\n    private separateAndAssignWork(cellNum: number): Promise<CalcResult>[] {\r\n        let result: Promise<CalcResult>[] = [];\r\n        /** 均等割りした場合の数。これをもとにざっくり仕事を切っていく */\r\n        const aboutSepIndex = Math.ceil(this.csv.length / CsvCalc.WORK_NUM);\r\n        let startI = 0;\r\n        const ite = this.csv[Symbol.iterator]();\r\n        let i = 0, sepStartI = 0;\r\n        let buf = new Float32Array(this.csv.length); // ワーカに渡すバッファ\r\n        for (let v of ite) {\r\n            buf[i - sepStartI] = v.codePointAt(0);\r\n            if ((i > sepStartI + aboutSepIndex && buf[i - sepStartI] === CsvCalc.LINE_SEPARATOR_CODE)) {\r\n                // ざっくり切る範囲の次の改行までを渡す単位として、ワーカに渡す\r\n                result.push(this.doWorker(buf.slice(0, (i - sepStartI + 1)), cellNum));\r\n                sepStartI = i + 1;\r\n                // 次のバッファを作成、作成するバッファ長はだんだん短くて十分になる。\r\n                buf = new Float32Array(this.csv.length - sepStartI);\r\n            }\r\n            i++;\r\n        }\r\n        // 最後の一回はほとんどの場合半端になるはずなので、ここで実行。\r\n        result.push(this.doWorker(buf.slice(0, i - sepStartI), cellNum))\r\n        return result;\r\n    }\r\n\r\n    private doWorker(cutCSV: Float32Array, cellNum: number): Promise<CalcResult> {\r\n        // TypedArray.prototype.sliceは結局コピーなのでもったいない。開始終了だけ渡す。\r\n        return new Promise((resolve, reject) => {\r\n            const arg: WorkArg = {\r\n                buf: cutCSV,\r\n                noData: NoDataTreat.ignore,\r\n                targetCellNum: cellNum\r\n            }\r\n            let w = new Worker(\"worker.js\");\r\n            w.onmessage = function (ev) {\r\n                resolve(<CalcResult>ev.data);\r\n            };\r\n            w.postMessage(arg, [arg.buf.buffer]);\r\n        });\r\n    }\r\n}\r\n\r\n/** 普通にfor文で計算するパティーン */\r\nexport function normalCalc(arg: CalcArg): CalcResult {\r\n    console.time(\"nParseTime\");\r\n    const parse = U.parseCSVKai(arg.csv[Symbol.iterator](), (v: string) => v, U.CSV_SEP, U.LINE_SEP, arg.targetCellNum);\r\n    console.timeEnd(\"nParseTime\");\r\n    let calcArr: number[] = [];\r\n    for (let i = 0, l = parse.targetArr.length; i < l; i++) {\r\n        calcArr.push(parseFloat((parse.targetArr[i]).replace(/^\\\"+|\\\"+$/g, \"\")))\r\n    }\r\n    return U.getAve(calcArr, parse.lineNum, arg.noData);\r\n}","import * as calc from \"./calc\";\r\nimport { NoDataTreat as NDT, CalcArg as CArg, CalcResult as CRslt } from \"./calc\";\r\n\r\ndeclare global {\r\n    interface Window { resultsForTable: Results; }\r\n}\r\n\r\nenum WorkType {\r\n    webworker,\r\n    normal\r\n}\r\n\r\nconst cg = document.getElementById(\"csvget\");\r\ncg.onclick = function () {\r\n    const a = new XMLHttpRequest();\r\n    a.open(\"GET\", \"http://127.0.0.1:8000/bigfile/rice.csv\", true);\r\n    a.send();\r\n    a.onreadystatechange = function () {\r\n        if (a.readyState === XMLHttpRequest.DONE) {\r\n            requestCalc({ csv: a.responseText, targetCellNum: 5, noData: NDT.ignore }, getWorkType());\r\n        }\r\n    }\r\n}\r\n\r\n/** 画面のワークタイプ選択ラジオボタンからワークタイプを割り出す */\r\nfunction getWorkType(): WorkType {\r\n    const wr = <HTMLFormElement>document.getElementById(\"worktype-radio\");\r\n    return <WorkType>(parseInt(wr[\"worktype\"].value));\r\n}\r\n\r\nasync function requestCalc(arg: CArg, worktype: WorkType) {\r\n    let result: CRslt;\r\n    let time = Date.now();\r\n    switch (worktype) {\r\n        case WorkType.webworker:\r\n            const c = new calc.CsvCalc(arg.csv, arg.noData);\r\n            result = await c.getAve(arg.targetCellNum);\r\n            break;\r\n        case WorkType.normal:\r\n            result = calc.normalCalc(arg);\r\n            break;\r\n        default:\r\n            alert(\"worktypeがおかしいんじゃ:\" + worktype);\r\n    }\r\n    time = Date.now() - time;\r\n    pushResult(result, time, worktype);\r\n    resultOutPut();\r\n}\r\n\r\nfunction pushResult(result: CRslt, ms: number, worktype: WorkType) {\r\n    if (!window.resultsForTable) {\r\n        window.resultsForTable = new Results(10);\r\n    }\r\n    window.resultsForTable.push({ result, ms }, worktype);\r\n}\r\n\r\n/** 結果を表示するDOM職人 */\r\nfunction resultOutPut() {\r\n    const table = document.createElement(\"table\");\r\n    const tr_header = document.createElement(\"tr\");\r\n    const kind = document.createElement(\"th\");\r\n    kind.innerHTML = \"種別\";\r\n    tr_header.appendChild(kind);\r\n    const ave = document.createElement(\"th\");\r\n    ave.innerHTML = \"平均\";\r\n    tr_header.appendChild(ave);\r\n    for (let i = 0; i < (window.resultsForTable ? window.resultsForTable.maxLength : 0); i++) {\r\n        const header = document.createElement(\"th\");\r\n        header.innerHTML = (i + 1).toString();\r\n        tr_header.appendChild(header);\r\n    }\r\n    table.appendChild(tr_header);\r\n\r\n    const tr_normal = document.createElement(\"tr\");\r\n    const tr_worker = document.createElement(\"tr\");\r\n    const th_normalTitle = document.createElement(\"th\");\r\n    th_normalTitle.innerHTML = \"フツーのfor文\";\r\n    const th_normalAve = document.createElement(\"th\");\r\n    th_normalAve.innerHTML = \"null\";\r\n    tr_normal.appendChild(th_normalTitle);\r\n    tr_normal.appendChild(th_normalAve);\r\n    const th_workerTitle = document.createElement(\"th\");\r\n    th_workerTitle.innerHTML = \"WebWorker\";\r\n    const th_workerAve = document.createElement(\"th\");\r\n    th_workerAve.innerHTML = \"null\";\r\n    tr_worker.appendChild(th_workerTitle);\r\n    tr_worker.appendChild(th_workerAve);\r\n\r\n    table.appendChild(tr_normal);\r\n    table.appendChild(tr_worker);\r\n\r\n    const normalResult = window.resultsForTable.result[WorkType.normal];\r\n    const workerResult = window.resultsForTable.result[WorkType.webworker];\r\n    let normalsum = 0;\r\n    let normalnum = 0;\r\n    let workersum = 0;\r\n    let workernum = 0;\r\n    for (let i = 0, l = window.resultsForTable.maxLength; i < l; i++) {\r\n        let normalTH = document.createElement(\"th\");\r\n        normalTH.innerHTML = \"null\";\r\n        let workerTH = document.createElement(\"th\");\r\n        workerTH.innerHTML = \"null\";\r\n        if (normalResult[i] && normalResult[i].result) {\r\n            const normalSubResult = normalResult[i].result;\r\n            const tooltipStr = \"linenum:\" + normalSubResult.lineNum + \"\\nave:\" + normalSubResult.val + \"\\nnodata:\" + normalSubResult.noDataNum + \"\\ninvalidData:\" + normalSubResult.invalidDataNum;\r\n            normalTH.innerHTML = normalResult[i].ms + \"ms\";\r\n            normalTH.title = tooltipStr;\r\n            normalTH.style.fontWeight = \"normal\";\r\n            normalsum += normalResult[i].ms;\r\n            normalnum++;\r\n        }\r\n        if (workerResult[i] && workerResult[i].result) {\r\n            const workerSubResult = workerResult[i].result;\r\n            const tooltipStr = \"linenum:\" + workerSubResult.lineNum + \"\\nave:\" + workerSubResult.val + \"\\nnodata:\" + workerSubResult.noDataNum + \"\\ninvalidData:\" + workerSubResult.invalidDataNum;\r\n            workerTH.innerHTML = workerResult[i].ms + \"ms\";\r\n            workerTH.title = tooltipStr;\r\n            workerTH.style.fontWeight = \"normal\";\r\n            workersum += workerResult[i].ms;\r\n            workernum++;\r\n        }\r\n        tr_normal.appendChild(normalTH);\r\n        tr_worker.appendChild(workerTH);\r\n    }\r\n    th_normalAve.innerHTML = normalnum > 0 ? Math.ceil(normalsum / normalnum) + \"ms\" : \"null\";\r\n    th_workerAve.innerHTML = workernum > 0 ? Math.ceil(workersum / workernum) + \"ms\" : \"null\";\r\n\r\n    const d = <HTMLDivElement>document.getElementById(\"calc-result\");\r\n    d.innerHTML = \"\";\r\n    d.appendChild(table);\r\n}\r\n\r\nclass Results {\r\n    result: { [worktype: number]: { result: CRslt, ms: number }[] };\r\n    maxLength: number;\r\n    constructor(ml: number) {\r\n        this.maxLength = ml;\r\n        this.result = {};\r\n        for (let v in WorkType) {\r\n            const t = parseInt(v);\r\n            if (!isNaN(t)) {\r\n                this.result[t] = [];\r\n            }\r\n        }\r\n    }\r\n    push(result: { result: CRslt, ms: number }, worktype: WorkType) {\r\n        if (!this.result[worktype]) {\r\n            alert(\"Results.pushできません。worktypeがおかしいです。：\" + worktype);\r\n        }\r\n        this.result[worktype].unshift(result);\r\n        if (this.result[worktype].length > this.maxLength) {\r\n            this.result[worktype] = this.result[worktype].slice(0, this.maxLength);\r\n        }\r\n    }\r\n}","import { NoDataTreat, CalcResult } from \"./calc\";\r\n\r\nexport namespace Utils {\r\n    export const CSV_SEP = \",\";\r\n    export const LINE_SEP = \"\\n\";\r\n    export const CSV_SEP_CODE = CSV_SEP.codePointAt(0);\r\n    export const LINE_SEP_CODE = LINE_SEP.codePointAt(0);\r\n    export const TRIM_STR_CODE = \"\\\"\".codePointAt(0);\r\n\r\n    /** CSVパーサ。ダブルクォートなどはまったく考慮していない。 */\r\n    export function parseCSV(arg: { csvArr: string[], calcArr: number[], currentCellStartI: number, i: number, cellNum: number, targetCellNum: number }): void {\r\n        switch (arg.csvArr[arg.i]) {\r\n            case CSV_SEP:\r\n            case LINE_SEP:\r\n                // セルの終わりなので、現在のセル確認\r\n                if (arg.cellNum === arg.targetCellNum) {\r\n                    // 現在ターゲットセルにいれば、中身を計算対象に入れる。数値じゃなきゃNaNを入れて、後処理で頑張ってもらう。\r\n                    arg.calcArr.push(parseFloat((arg.csvArr.slice(arg.currentCellStartI, arg.i).join(\"\")).replace(/^\\\"+|\\\"+$/g, \"\")));\r\n                }\r\n                arg.currentCellStartI = arg.i + 1; // 次の文字がセル開始位置\r\n                if (arg.csvArr[arg.i] === CSV_SEP) {\r\n                    // セル区切りなのでセル番を更新\r\n                    arg.cellNum++;\r\n                } else if (arg.csvArr[arg.i] === LINE_SEP) {\r\n                    // 行区切りなので、セル番をリセット\r\n                    arg.cellNum = 0;\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    interface ParseResult {\r\n        targetArr: string[];\r\n        lineNum: number;\r\n    }\r\n\r\n    /** \r\n     * CSVパーサ。イテレータを渡すことで型に縛られずにイテレートする。  \r\n     * 文字コードUTF-8, 改行LF(\\n), 禁則文字[\",\",\"\\n\"]\r\n     * @param ite 元CSVデータのイテレータ。stringでもTypedArrayでも、hoge[Symbol.iterator]()でイテレータは取得できる。\r\n     * @param tostr valueをstringに変換するfunction。TypedArrayで必要なはず。\r\n     * @param csvSep CSVのセパレータ。文字列戻したりしたくはないので、そのまま判別したいので。\r\n     * @param lineSep 行セパレータ。同上。\r\n     * @param targetCellNum 返却対象のセル番号。\r\n     */\r\n    export function parseCSVKai<T>(ite: IterableIterator<T>, tostr: (a: T) => string, csvSep: T, lineSep: T, targetCellNum: number): ParseResult {\r\n        let targetCellVal: string[] = [];\r\n        /** 空セルは配列に入らない（飛ばされる） */\r\n        let targetArr: string[] = [];\r\n        let currentCellNum = 0;\r\n        let lineNum = 0;\r\n\r\n        for (let t = ite.next(); t && t.value; t = ite.next()) {\r\n            switch (t.value) {\r\n                case csvSep:\r\n                    currentCellNum++;\r\n                    break;\r\n                case lineSep:\r\n                    currentCellNum = 0;\r\n                    lineNum++;\r\n                    break;\r\n                default:\r\n                // nothing to do\r\n            }\r\n            if (currentCellNum === targetCellNum) {\r\n                if (t.value !== csvSep && t.value !== lineSep) {\r\n                    // 当該セル内で、かつセパレータは邪魔なので除く\r\n                    targetCellVal.push(tostr(t.value));\r\n                }\r\n            } else {\r\n                if (targetCellVal.length !== 0) {\r\n                    // 内容をpush\r\n                    targetArr.push(targetCellVal.join(\"\"));\r\n                    targetCellVal = [];\r\n                }\r\n            }\r\n        }\r\n        return { targetArr, lineNum };\r\n    }\r\n\r\n    export function getAve(calcArr: number[], lineNum: number, ndt: NoDataTreat): CalcResult {\r\n        let invalidData: number[] = [];\r\n        let sum = 0;\r\n        for (let i = 0, l = calcArr.length; i < l; i++) {\r\n            if (!isNaN(calcArr[i])) {\r\n                // 数値は普通に足す\r\n                sum += calcArr[i];\r\n            } else {\r\n                // データなし配列に添字を入れる\r\n                invalidData.push(i);\r\n            }\r\n        }\r\n        // Noデータを０扱いするかどうかで割り算を変える\r\n        const result = sum / (ndt === NoDataTreat.zero ? lineNum : calcArr.length - invalidData.length);\r\n        return { val: result, lineNum, noDataNum: lineNum - calcArr.length, invalidDataNum: invalidData.length };\r\n    }\r\n\r\n    export function margeAve(rs: CalcResult[], ndt: NoDataTreat): CalcResult {\r\n        let tmpresult: CalcResult = { lineNum: 0, val: 0, noDataNum: 0, invalidDataNum: 0 };\r\n        for (let i = 0, l = rs.length; i < l; i++) {\r\n            switch (ndt) {\r\n                case NoDataTreat.ignore:\r\n                    tmpresult.val += rs[i].val * (rs[i].lineNum - rs[i].noDataNum - rs[i].invalidDataNum);\r\n                    break;\r\n                case NoDataTreat.zero:\r\n                    tmpresult.val += rs[i].val * rs[i].lineNum;\r\n                    break;\r\n                default:\r\n            }\r\n            tmpresult.lineNum += rs[i].lineNum;\r\n            tmpresult.invalidDataNum += rs[i].invalidDataNum;\r\n            tmpresult.noDataNum += rs[i].noDataNum;\r\n        }\r\n        let result = tmpresult;\r\n        switch (ndt) {\r\n            case NoDataTreat.ignore:\r\n                result.val = result.val / (result.lineNum - result.noDataNum - result.invalidDataNum);\r\n                break;\r\n            case NoDataTreat.zero:\r\n                result.val = result.val / result.lineNum;\r\n                break;\r\n            default:\r\n        }\r\n        return result;\r\n    }\r\n}"],"sourceRoot":""}