{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/calc.ts","webpack:///./src/main.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AChDA,IAAY,WAKX;AALD,WAAY,WAAW;IAEnB,iDAAM;IAEN,6CAAI;AACR,CAAC,EALW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAKtB;AAQD;IAYI,YAAY,GAAW;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IACD,MAAM,CAAC,OAAe;QAElB,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;YAChE,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,WAAW,EAAE,CAAC;gBACd,EAAE,CAAC,CAAC,WAAW,KAAK,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBAC/B,WAAW,GAAG,CAAC,CAAC;oBAChB,SAAS,GAAG,IAAI,GAAG,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,CAAC;IACX,CAAC;IACD,QAAQ,CAAC,CAAS,EAAE,CAAS;QAEzB,MAAM,GAAG,GAAY;YACjB,MAAM,EAAE,IAAI,CAAC,GAAG;YAChB,OAAO,EAAE;gBACL,MAAM,EAAE,CAAC;gBACT,IAAI,EAAE,CAAC;aACV;YACD,MAAM,EAAE,WAAW,CAAC,MAAM;SAC7B;IAEL,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEnC,IAAI,CAAC,GAAG,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;;AAhDM,iBAAS,GAAW,IAAI,CAAC;AAEzB,qBAAa,GAAW,IAAI,GAAG,EAAE,CAAC;AAX7C,0BA0DC;AAED,MAAM,OAAO,GAAG,GAAG,CAAC;AAEpB,kBAAkB,GAA0H;IACxI,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,KAAK,OAAO,CAAC;QACb,KAAK,OAAO,CAAC,SAAS;YAElB,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;gBAEpC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1H,CAAC;YACD,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC;gBAEhC,GAAG,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBAEjD,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;YACpB,CAAC;YACD,KAAK,CAAC;QACV,QAAQ;IACZ,CAAC;AACL,CAAC;AAGD,oBAA2B,GAAY;IACnC,MAAM,OAAO,GAAG,GAAG,CAAC;IACpB,MAAM,MAAM,GAAa,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7C,IAAI,OAAO,GAAa,EAAE,CAAC;IAC3B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzB,MAAM,QAAQ,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,aAAa,EAAE,GAAG,CAAC,aAAa,EAAE,CAAC;IAChI,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;QACzD,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvB,CAAC;IACD,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC;AAXD,gCAWC;AAED,aAAa,OAAiB,EAAE,GAAgB;IAC5C,IAAI,MAAM,GAAa,EAAE,CAAC;IAC1B,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAErB,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;IAED,MAAM,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAClG,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC;AACvE,CAAC;;;;;;;;;;;;;;;ACjJD,gEAA+B;AAC/B,kEAAkF;AAElF,IAAK,QAGJ;AAHD,WAAK,QAAQ;IACT,iDAAS;IACT,2CAAM;AACV,CAAC,EAHI,QAAQ,KAAR,QAAQ,QAGZ;AAED,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;AAChC,MAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC9C,MAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC7C,IAAI,EAAE,GAAG,IAAI,iBAAiB,CAAC,EAAE,CAAC,CAAC;AACnC,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;AAEnC,EAAE,CAAC,OAAO,GAAG;IACT,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAClB,UAAU,CAAC;QACP,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC;AAEF,EAAE,CAAC,OAAO,GAAG;IACT,MAAM,CAAC,GAAG,IAAI,cAAc,EAAE,CAAC;IAC/B,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,wCAAwC,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,kBAAkB,GAAG;QACnB,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACvC,WAAW,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,YAAY,EAAE,aAAa,EAAE,CAAC,EAAE,MAAM,EAAE,kBAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QAC9F,CAAC;IACL,CAAC;AACL,CAAC;AAGD;IACI,MAAM,EAAE,GAAoB,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IACtE,MAAM,CAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACtD,CAAC;AAED,qBAAqB,GAAS,EAAE,QAAkB;IAC9C,IAAI,MAAuB,CAAC;IAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACf,KAAK,QAAQ,CAAC,SAAS;YACnB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEpC,KAAK,CAAC;QACV,KAAK,QAAQ,CAAC,MAAM;YAChB,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAK,CAAC;QACV;YACI,KAAK,CAAC,mBAAmB,GAAG,QAAQ,CAAC,CAAC;IAC9C,CAAC;IACD,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;IACzB,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACzC,CAAC;AAED,sBAAsB,MAAa,EAAE,EAAU,EAAE,QAAkB;IAC/D,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,WAAW,GAAG,EAAE,GAAG,IAAI,GAAG,cAAc,GAAG,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,MAAM,CAAC,GAAG,GAAG,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;IACtM,MAAM,CAAC,GAAmB,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IACjE,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;AAC5B,CAAC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","export interface CalcArg {\r\n    csv: string,\r\n    targetCellNum: number,\r\n    noData: NoDataTreat\r\n}\r\n\r\ninterface WorkArg {\r\n    indices: Indices;\r\n    noData: NoDataTreat;\r\n    csvBuf: SharedArrayBuffer;\r\n}\r\n\r\n/** 配列の対象インデックス、開始終了 */\r\ninterface Indices {\r\n    startI: number;\r\n    endI: number;\r\n}\r\n\r\n/** データがない場合の扱い */\r\nexport enum NoDataTreat {\r\n    /** ないものとして計算する */\r\n    ignore,\r\n    /** ゼロとして計算する */\r\n    zero\r\n}\r\n\r\nexport interface CalcResult {\r\n    val: number;\r\n    lineNum: number;\r\n    noDataIdx: number[];\r\n}\r\n\r\nexport class CsvCalc {\r\n    /** 入力元CSV */\r\n    csv: string;\r\n    /** CSVを一文字ずつの配列にしたもの。𩸽対策で文字単位で入れたいため。 */\r\n    csvArr: string[];\r\n    /** Workerとメモリシェアするために */\r\n    buf: SharedArrayBuffer;\r\n    /** SharedArrayBufferを使うためのView */\r\n    bufView: Float32Array;\r\n    static SEPARATOR: string = \"\\n\";\r\n    /** ワーカが処理するレコードの単位 */\r\n    static WORK_UNIT_NUM: number = 1000 * 10;\r\n    constructor(csv: string) {\r\n        this.csv = csv;\r\n        this.csvToBuf();\r\n    }\r\n    getAve(cellNum: Number): CalcResult {\r\n        /** 前のループの改行の次の文字のインデックス */\r\n        let lastStart = 0;\r\n        /** レコード数チェック変数 */\r\n        let recordCount = 0;\r\n        for (let csvI = 0, csvL = this.csvArr.length; csvI < csvL; csvI++) {\r\n            if (CsvCalc.SEPARATOR === this.csvArr[csvI][0]) {\r\n                recordCount++;\r\n                if (recordCount === CsvCalc.WORK_UNIT_NUM) {\r\n                    this.doWorker(lastStart, csvI);\r\n                    recordCount = 0;\r\n                    lastStart = csvI + 1; // 改行の一つ後ろの文字からやるために\r\n                }\r\n            }\r\n        }\r\n        this.doWorker(lastStart, this.csvArr.length); // ぴったり終わることなんてないので最後の分を送る\r\n        return;\r\n    }\r\n    doWorker(s: number, e: number) {\r\n        // TypedArray.prototype.sliceは結局コピーなのでもったいない。開始終了だけ渡す。\r\n        const arg: WorkArg = {\r\n            csvBuf: this.buf,\r\n            indices: {\r\n                startI: s,\r\n                endI: e\r\n            },\r\n            noData: NoDataTreat.ignore\r\n        }\r\n        // worker\r\n    }\r\n    /** 文字列をバッファに変換する */\r\n    csvToBuf() {\r\n        // 一文字ごとの配列にする。\r\n        this.csvArr = Array.from(this.csv);\r\n        // 一文字4最大バイトなのでlenght*4\r\n        this.buf = new SharedArrayBuffer(this.csvArr.length * 4);\r\n        // ArrayBufferをシステムで扱うためにviewを作成\r\n        this.bufView = new Float32Array(this.buf);\r\n        for (let i = 0, l = this.bufView.length; i < l; i++) {\r\n            this.bufView[i] = this.csvArr[i].codePointAt(0);\r\n        }\r\n    }\r\n}\r\n\r\nconst CSV_SEP = \",\";\r\n\r\nfunction parseCSV(arg: { csvArr: string[], calcArr: number[], currentCellStartI: number, i: number, cellNum: number, targetCellNum: number }) {\r\n    switch (arg.csvArr[arg.i]) {\r\n        case CSV_SEP:\r\n        case CsvCalc.SEPARATOR:\r\n            // セルの終わりなので、現在のセル確認\r\n            if (arg.cellNum === arg.targetCellNum) {\r\n                // 現在ターゲットセルにいれば、中身を計算対象に入れる。数値じゃなきゃNaNを入れて、後処理で頑張ってもらう。\r\n                arg.calcArr.push(parseFloat((arg.csvArr.slice(arg.currentCellStartI, arg.i - 1).join(\"\")).replace(/^\\\"+|\\\"+$/g, \"\")));\r\n            }\r\n            arg.currentCellStartI = arg.i + 1; // 次の文字がセル開始位置\r\n            if (arg.csvArr[arg.i] === CSV_SEP) {\r\n                // セル区切りなのでセル番を更新\r\n                arg.cellNum++;\r\n            } else if (arg.csvArr[arg.i] === CsvCalc.SEPARATOR) {\r\n                // 行区切りなので、セル番をリセット\r\n                arg.cellNum = 0;\r\n            }\r\n            break;\r\n        default:\r\n    }\r\n}\r\n\r\n/** 普通にfor文で計算するパティーン */\r\nexport function normalCalc(arg: CalcArg): CalcResult {\r\n    const CSV_SEP = \",\";\r\n    const csvArr: string[] = Array.from(arg.csv);\r\n    let calcArr: number[] = [];\r\n    console.time(\"calctime\");\r\n    const parseArg = { csvArr: csvArr, calcArr: calcArr, currentCellStartI: 0, i: 0, cellNum: 0, targetCellNum: arg.targetCellNum };\r\n    for (const l = csvArr.length; parseArg.i < l; parseArg.i++) {\r\n        parseCSV(parseArg);\r\n    }\r\n    console.timeEnd(\"calctime\");\r\n    return Ave(calcArr, arg.noData);\r\n}\r\n\r\nfunction Ave(calcArr: number[], ndt: NoDataTreat): CalcResult {\r\n    let noData: number[] = [];\r\n    let sum = 0;\r\n    for (let i = 0, l = calcArr.length; i < l; i++) {\r\n        if (!isNaN(calcArr[i])) {\r\n            // 数値は普通に足す\r\n            sum += calcArr[i];\r\n        } else {\r\n            // データなし配列に添字を入れる\r\n            noData.push(i);\r\n        }\r\n    }\r\n    // Noデータを０扱いするかどうかで割り算を変える\r\n    const result = sum / (ndt === NoDataTreat.zero ? calcArr.length : calcArr.length - noData.length);\r\n    return { val: result, lineNum: calcArr.length, noDataIdx: noData };\r\n}","import * as calc from \"./calc\";\r\nimport { NoDataTreat as NDT, CalcArg as CArg, CalcResult as CRslt } from \"./calc\";\r\n\r\nenum WorkType {\r\n    webworker,\r\n    normal\r\n}\r\n\r\nlet w = new Worker(\"worker.js\");\r\nconst wb = document.getElementById(\"workbtn\");\r\nconst cg = document.getElementById(\"csvget\");\r\nlet sb = new SharedArrayBuffer(12);\r\nlet bufView = new Float32Array(sb);\r\n\r\nwb.onclick = function () {\r\n    w.postMessage(sb);\r\n    setTimeout(function () {\r\n        for (let i = 0; i < 10; i++) {\r\n            console.log(bufView[i])\r\n        }\r\n    }, 1000)\r\n};\r\n\r\ncg.onclick = function () {\r\n    const a = new XMLHttpRequest();\r\n    a.open(\"GET\", \"http://127.0.0.1:8000/bigfile/rice.csv\", true);\r\n    a.send();\r\n    a.onreadystatechange = function () {\r\n        if (a.readyState === XMLHttpRequest.DONE) {\r\n            requestCalc({ csv: a.responseText, targetCellNum: 5, noData: NDT.ignore }, getWorkType());\r\n        }\r\n    }\r\n}\r\n\r\n/** 画面のワークタイプ選択ラジオボタンからワークタイプを割り出す */\r\nfunction getWorkType(): WorkType {\r\n    const wr = <HTMLFormElement>document.getElementById(\"worktype-radio\");\r\n    return <WorkType>(parseInt(wr[\"worktype\"].value));\r\n}\r\n\r\nfunction requestCalc(arg: CArg, worktype: WorkType) {\r\n    let result: calc.CalcResult;\r\n    let time = Date.now();\r\n    switch (worktype) {\r\n        case WorkType.webworker:\r\n            const c = new calc.CsvCalc(arg.csv);\r\n            // result = c.getAve(5);\r\n            break;\r\n        case WorkType.normal:\r\n            result = calc.normalCalc(arg);\r\n            break;\r\n        default:\r\n            alert(\"worktypeがおかしいんじゃ:\" + worktype);\r\n    }\r\n    time = Date.now() - time;\r\n    resultOutPut(result, time, worktype);\r\n}\r\n\r\nfunction resultOutPut(result: CRslt, ms: number, worktype: WorkType) {\r\n    const resultstr = result ? \"worktype:\" + WorkType[worktype] + \"<br>time:\" + ms + \"ms\" + \"<br>linenum:\" + result.lineNum + \"<br>ave:\" + result.val + \"<br>nodata:\" + result.noDataIdx.length : \"null!\";\r\n    const d = <HTMLDivElement>document.getElementById(\"calc-result\");\r\n    d.innerHTML = resultstr;\r\n}"],"sourceRoot":""}